const electron = require('electron');

const {
    app,
    BrowserWindow,
    TouchBar,
    nativeImage
} = require('electron');
const {
    TouchBarLabel,
    TouchBarButton,
    TouchBarSpacer
} = TouchBar;
const path = require('path');
const url = require('url');

let win;

/* ----------  MC BEGIN ---------- */

/* -- MC VARS BEGIN -- */
var playing = false;
/* --- MC VARS END --- */

const back = new TouchBarButton({
    backgroundColor: '#444444',
    icon: nativeImage.createFromPath(path.join(__dirname, 'build/back.png')).resize({
        width: 16,
        height: 16
    }),
    iconPosition: 'center',
    click: () => {
        /* do smth */ }
});


const playPause = new TouchBarButton({
    backgroundColor: '#444444',
    icon: nativeImage.createFromPath(path.join(__dirname, 'build/play.png')).resize({
        width: 16,
        height: 16
    }),
    iconPosition: 'center',
    click: () => {
        console.log(playing);
        if (playing) {
            playPause.icon = nativeImage.createFromPath(path.join(__dirname, 'build/play.png')).resize({
                width: 16,
                height: 16
            });
            playing = false;
        } else {
            playPause.icon = nativeImage.createFromPath(path.join(__dirname, 'build/pause.png')).resize({
                width: 16,
                height: 16
            });
            playing = true;
        }
    }
});

const forward = new TouchBarButton({
    backgroundColor: '#444444',
    icon: nativeImage.createFromPath(path.join(__dirname, 'build/forward.png')).resize({
        width: 16,
        height: 16
    }),
    iconPosition: 'center',
    click: () => {
        /* do smth */ }
});

/* -----------  MC END ----------- */

/* ---------- MISC BEGIN --------- */

/* -- MC VARS BEGIN -- */
var like = 0; // dislike = -1, neutral = 0, like = 1
var muted = false;
var repeat = -1; // repeat_off = -1, repeat = 0, repeat_one = 1
/* --- MC VARS END --- */

const downVote = new TouchBarButton({
    backgroundColor: '#444444',
    icon: nativeImage.createFromPath(path.join(__dirname, 'build/thumbsdown.png')).resize({
        width: 16,
        height: 16
    }),
    iconPosition: 'center',
    click: () => {
        if (like == 0) {
            downVote.icon = nativeImage.createFromPath(path.join(__dirname, 'build/thumbsdown_true.png')).resize({
                width: 16,
                height: 16
            });
            like = -1;
			upVote.icon = nativeImage.createFromPath(path.join(__dirname, 'build/thumbsup.png')).resize({
                width: 16,
                height: 16
            });
        } else {
            downVote.icon = nativeImage.createFromPath(path.join(__dirname, 'build/thumbsdown.png')).resize({
                width: 16,
                height: 16
            });
            like = 0;
        }
    }
});

const upVote = new TouchBarButton({
    backgroundColor: '#444444',
    icon: nativeImage.createFromPath(path.join(__dirname, 'build/thumbsup.png')).resize({
        width: 16,
        height: 16
    }),
    iconPosition: 'center',
    click: () => {
        if (like == 0) {
            upVote.icon = nativeImage.createFromPath(path.join(__dirname, 'build/thumbsup_true.png')).resize({
                width: 16,
                height: 16
            });
            like = 1;
			downVote.icon = nativeImage.createFromPath(path.join(__dirname, 'build/thumbsdown.png')).resize({
                width: 16,
                height: 16
            });
        } else {
            upVote.icon = nativeImage.createFromPath(path.join(__dirname, 'build/thumbsup.png')).resize({
                width: 16,
                height: 16
            });
            like = 0;
        }
    }
});

const volumeToggle = new TouchBarButton({
    backgroundColor: '#444444',
    icon: nativeImage.createFromPath(path.join(__dirname, 'build/mute.png')).resize({
        width: 16,
        height: 16
    }),
    iconPosition: 'center',
    click: () => {
        if (muted) {
            volumeToggle.icon = nativeImage.createFromPath(path.join(__dirname, 'build/mute.png')).resize({
                width: 16,
                height: 16
            });
            muted = false
        } else {
            volumeToggle.icon = nativeImage.createFromPath(path.join(__dirname, 'build/unmute.png')).resize({
                width: 16,
                height: 16
            });
            muted = true;
        }
    }
});

const repeatToggle = new TouchBarButton({
    backgroundColor: '#444444',
    icon: nativeImage.createFromPath(path.join(__dirname, 'build/repeat-off.png')).resize({
        width: 16,
        height: 16
    }),
    iconPosition: 'center',
    click: () => {
        if (repeat == -1) {
            repeatToggle.icon = nativeImage.createFromPath(path.join(__dirname, 'build/repeat.png')).resize({
                width: 16,
                height: 16
            });
            repeat = 0;
        } else {
			if(repeat == 0){
				repeatToggle.icon = nativeImage.createFromPath(path.join(__dirname, 'build/repeat-one.png')).resize({
					width: 16,
					height: 16
				});
				repeat = 1;
			}else{
				repeatToggle.icon = nativeImage.createFromPath(path.join(__dirname, 'build/repeat-off.png')).resize({
					width: 16,
					height: 16
				});
				repeat = -1;
			}

        }
    }
});
/* ----------  MISC END ---------- */

const touchBar = new TouchBar([
    back,
    playPause,
    forward,
    new TouchBarSpacer({
        size: 'large'
    }),
    downVote,
	upVote,
	new TouchBarSpacer({
        size: 'large'
    }),
	new TouchBarSpacer({
        size: 'large'
    }),
	volumeToggle,
	repeatToggle
]);

function createWindow() {
    win = new BrowserWindow({
        width: 800,
        height: 600
    });
    win.loadURL(url.format({
        pathname: path.join(__dirname, 'index.html'),
        protocol: 'file:',
        slashes: true
    }));

    win.on('closed', () => {
        win = null;
    });

    win.setTouchBar(touchBar);
}
app.on('ready', createWindow);

app.on('window-all-closed', () => {
    if (process.platform !== 'darwin') {
        app.quit();
    }
});

app.on('activate', () => {
    if (win === null) {
        createWindow();
    }
});